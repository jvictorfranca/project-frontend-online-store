{"version":3,"sources":["Components/CartItem/index.js","pages/ShoppingCart/index.js","Components/ProductCard/index.js","Components/ProductList/index.js","Components/CartButton/index.js","services/api.js","Components/CategoryList/index.jsx","pages/ProductsList/index.js","Components/DetailsItem/index.jsx","Components/EvaluationForm/index.jsx","pages/ProductDetails.js","Components/ProductCheckout/index.js","pages/FinishPurchase/index.js","App.js","serviceWorker.js","index.js"],"names":["CartItem","product","id","title","thumbnail","price","availableQuantity","available_quantity","quant","onAddClick","onSubClick","onRemoveClick","rest","className","type","onClick","size","src","alt","data-testid","disabled","Intl","NumberFormat","style","currency","format","ShoppingCart","this","props","cart","addToCart","subFromCart","removeFromCart","cartTotal","to","length","map","key","pathname","state","products","sum","React","Component","ProductCard","shipping","freeShipping","free_shipping","formattedPrice","cartNames","cartProduct","includes","ProductList","CartButton","getCategories","a","fetch","response","json","Categorias","getProductsFromCategoryAndQuery","categoryId","query","searchQuery","itens","CategoryList","categorias","listaCategorias","bind","onCallback","event","elemento","target","value","callback","api","CategoryNames","setState","obj","htmlFor","name","ProductsList","searching","category","doneSearching","sorted","handleQuerry","handleButton","categorySearch","updated","results","then","array","sort","b","sortProducts","onChange","DetailsItem","EvaluationForm","rating","onStarClick","formAceppt","nextValue","preventDefault","console","log","onSubmit","placeholder","starCount","ProductDetails","location","cartTotalItems","getProductQuantity","condition","marca","condicao","ProductCheckout","total","formattedTotal","FinishPurchase","email","cpf","phone","cep","address","handleChange","clickFinish","App","prevCart","existsProduct","findIndex","push","cartQuantity","animateButton","newCart","filter","prevProduct","totalPrice","reduce","getStateFromLocalStorage","localStorage","shoppingCart","shoppingCartObject","JSON","parse","productQuantityById","find","productId","updateLocalStorage","object","stringify","cartIcon","document","getElementsByClassName","classList","contains","add","setTimeout","remove","exact","path","render","component","Boolean","window","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"unBA8EeA,G,MAxEE,SAAC,GAAD,QACfC,QACEC,EAFa,EAEbA,GACAC,EAHa,EAGbA,MACAC,EAJa,EAIbA,UACAC,EALa,EAKbA,MACoBC,EANP,EAMbC,mBACAC,EAPa,EAObA,MAEFC,EATe,EASfA,WACAC,EAVe,EAUfA,WACAC,EAXe,EAWfA,cACGC,EAZY,4EAcf,sCAAIV,GAAKA,EAAKW,UAAU,uBAA2BD,GACjD,4BACEC,UAAU,aACVC,KAAK,SACLC,QAAUJ,GAEV,kBAAC,IAAD,CAAeK,KAAK,SAEtB,yBAAKC,IAAMb,EAAYc,IAAMf,EAAQU,UAAU,mBAC/C,0BAAMA,UAAU,YAAYM,cAAY,8BAA8BhB,GACtE,yBAAKU,UAAU,qBACb,4BACEA,UAAU,MACVM,cAAY,4BACZL,KAAK,SACLC,QAAUL,GAEV,kBAAC,IAAD,CAAeM,KAAK,SAEtB,0BACEH,UAAU,gBACVM,cAAY,kCAEXX,GAEH,4BACEK,UAAU,MACVM,cAAY,4BACZC,SAAWZ,GAASF,EACpBQ,KAAK,SACLC,QAAUN,GAEV,kBAAC,IAAD,CAAcO,KAAK,UAGvB,0BAAMH,UAAU,cACZQ,KAAKC,aAAa,QAAS,CAC3BC,MAAO,WACPC,SAAU,QACTC,OAAOpB,OCnDKqB,G,6KACT,IAAD,EAOHC,KAAKC,MALPC,EAFK,EAELA,KACAC,EAHK,EAGLA,UACAC,EAJK,EAILA,YACAC,EALK,EAKLA,eACAC,EANK,EAMLA,UAGF,OACE,oCACE,4BAAQpB,UAAU,eAChB,kBAAC,IAAD,CAAMqB,GAAG,kCACP,kBAAC,IAAD,CAASlB,KAAK,SAEhB,8BACE,kBAAC,IAAD,CAAgBH,UAAU,iBAAiBG,KAAK,SAElD,oDAEF,wBAAIH,UAAU,mBAEVgB,EAAKM,OAAL,sBAEON,EAAKO,KAAI,SAACnC,GAAD,OACV,kBAAC,EAAD,CACEoC,IAAMpC,EAAQC,GACdD,QAAUA,EACVQ,WAAa,kBAAMqB,EAAU7B,IAC7BS,WAAa,kBAAMqB,EAAY9B,IAC/BU,cAAgB,kBAAMqB,EAAe/B,UAR7C,CAWI,wBAAIoC,IAAI,cAAR,iCAC8BJ,IAE9B,kBAAC,IAAD,CACEI,IAAI,WACJlB,cAAY,oBACZe,GACE,CAAEI,SAAU,UACVC,MAAO,CACLC,SAAUX,EACVY,IAAKR,KAPb,2BAcA,wBAAId,cAAY,+BAAhB,oC,GAnD0BuB,IAAMC,Y,iCCqEjCC,G,iLArEAC,GAAW,IACCC,EAAiBD,EAAhCE,cAER,OAAqB,IAAjBD,EACK,uBAAG3B,cAAY,iBAAf,iBAEF,8B,+BAGC,IAAD,EAC8BQ,KAAKC,MAAlC3B,EADD,EACCA,QAAS6B,EADV,EACUA,UAAWD,EADrB,EACqBA,KACpB3B,EAA0CD,EAA1CC,GAAIC,EAAsCF,EAAtCE,MAAOE,EAA+BJ,EAA/BI,MAAOD,EAAwBH,EAAxBG,UAAWyC,EAAa5C,EAAb4C,SAC/BG,EAAiB3B,KAAKC,aAAa,QAAS,CAChDC,MAAO,WACPC,SAAU,QACTC,OAAOpB,GACJ4C,EAAYpB,EAAKO,KAAI,SAACc,GAAD,OAAiBA,EAAY/C,SACxD,OACE,6BACEgB,cAAY,UACZN,UAAS,kBAAcoC,EAAUE,SAASlD,EAAQE,OAAS,UAAY,KAEvE,4BAAKA,GACL,yBAAKc,IAAMb,EAAYc,IAAI,sBAC3B,2BAAI8B,GACHrB,KAAKmB,aAAaD,GAEnB,yBAAKhC,UAAU,uBAEb,kBAAC,IAAD,CACEqB,GACE,CAAEI,SAAS,YAAD,OAAcpC,GACtBqC,MAAO,CAAEtC,YAEbkB,cAAY,uBALd,aASA,4BACEN,UAAU,iBACVM,cAAY,sBACZL,KAAK,SACLC,QAAU,kBAAMe,EAAU7B,KAJ5B,cAOE,kBAAC,IAAD,CAAYe,KAAK,MAAMH,UAAU,qB,GA9CnB6B,IAAMC,YCyBjBS,G,6KAzBH,IAAD,EAC+BzB,KAAKC,MAAnCY,EADD,EACCA,SAAUV,EADX,EACWA,UAAWD,EADtB,EACsBA,KAC7B,OACsB,IAApBW,EAASL,OACL,wDAEA,6BAAStB,UAAU,iBAChB2B,EAASJ,KAAI,SAACnC,GAAD,OAAc,kBAAC,EAAD,CAC1B6B,UAAYA,EACZ7B,QAAUA,EACVoC,IAAMpC,EAAQC,GACd2B,KAAOA,Y,GAZKa,IAAMC,YCiBjBU,G,6KAdH,IACA7C,EAAUmB,KAAKC,MAAfpB,MACR,OACE,kBAAC,IAAD,CAAM0B,GAAG,QAAQf,cAAY,wBAC3B,kBAAC,IAAD,CAAgBH,KAAK,MAAMH,UAAU,mBACrC,yBAAKM,cAAY,sBAAsBX,Q,GANtBkC,IAAMC,YCRxB,SAAeW,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBC,MAAM,qDADxB,cACCC,EADD,gBAGoBA,EAASC,OAH7B,cAGCC,EAHD,yBAKEA,GALF,4C,sBAQA,SAAeC,EAAtB,oC,4CAAO,WAA+CC,EAAYC,GAA3D,mBAAAP,EAAA,6DAEDQ,EAAc,UAEdF,IACFE,GAAW,mBAAgBF,GAAc,KAGvCC,IACFC,GAAW,UAAOF,EAAa,IAAM,GAA1B,aAAiCC,GAAS,KATlD,SAYkBN,MAAM,0CAAD,OACgBO,IAbvC,cAYCN,EAZD,gBAeeA,EAASC,OAfxB,cAeCM,EAfD,yBAiBEA,GAjBF,6C,gCCyDQC,E,kDA1Db,WAAYrC,GAAQ,IAAD,8BACjB,cAAMA,IACDW,MAAQ,CACX2B,WAAY,IAGd,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAPD,E,gEAWjBzC,KAAKwC,oB,iCAGIG,GACT,IAAMC,EAAWD,EAAME,OAAOC,OAE9BC,EADqB/C,KAAKC,MAAlB8C,UACCH,K,wKAImBI,I,OAAtBC,E,OACNjD,KAAKkD,SAAS,CACZX,WAAYU,I,qIAIN,IAAD,OACCV,EAAevC,KAAKY,MAApB2B,WACR,OACE,6BACE,wBAAIrD,UAAU,2BACVqD,EACC9B,KAAI,SAAC0C,GAAD,OAEH,wBAAIzC,IAAMyC,EAAI5E,GAAKW,UAAU,sBAE3B,2BAAOkE,QAAUD,EAAIE,MAAQF,EAAIE,MACjC,2BACE7D,cAAY,WACZJ,QAAU,EAAKsD,WACfW,KAAK,YACLlE,KAAK,QACLZ,GAAK4E,EAAIE,KACTP,MAAQK,EAAI5E,e,GA7CHyC,aCyHZsC,G,wDArHb,WAAYrD,GAAQ,IAAD,8BACjB,cAAMA,IACDW,MAAQ,CACX2C,UAAW,GACXC,SAAU,GACV3C,SAAU,GACV4C,eAAe,EACfC,OAAQ,IAEV,EAAKC,aAAe,EAAKA,aAAalB,KAAlB,gBACpB,EAAKmB,aAAe,EAAKA,aAAanB,KAAlB,gBACpB,EAAKoB,eAAiB,EAAKA,eAAepB,KAApB,gBAXL,E,yDAcNE,GAAQ,IAAD,EACMA,EAAME,OAAtBQ,EADU,EACVA,KAAMP,EADI,EACJA,MAEd9C,KAAKkD,SAAL,eACGG,EAAOP,M,oKAKsB9C,KAAKY,MAA7B2C,E,EAAAA,UAAWC,E,EAAAA,S,SACGR,EAAoCQ,EAAUD,G,OAA9DO,E,OACN9D,KAAKkD,SAAS,CACZrC,SAAUiD,EAAQC,QAClBN,eAAe,I,2IAIJD,GAAW,IAAD,OACvBxD,KAAKkD,SAAS,CAAEM,aAEhBR,EAAoCQ,EADdxD,KAAKY,MAAnB2C,WACiDS,MAAK,SAAClC,GAC7D,EAAKoB,SAAS,CACZO,eAAe,EACf5C,SAAUiB,EAASiC,e,mCAKZE,GAAQ,IACXP,EAAW1D,KAAKY,MAAhB8C,OACO,cAAXA,EACFO,EAAMC,MAAK,SAACtC,EAAGuC,GAAJ,OAAUvC,EAAElD,MAAQyF,EAAEzF,SACb,eAAXgF,GACTO,EAAMC,MAAK,SAACtC,EAAGuC,GAAJ,OAAUA,EAAEzF,MAAQkD,EAAElD,W,+BAI3B,IACAkC,EAAiBZ,KAAjBY,MAAOX,EAAUD,KAAVC,MACPsD,EAA+C3C,EAA/C2C,UAAW1C,EAAoCD,EAApCC,SAAU4C,EAA0B7C,EAA1B6C,cAAeC,EAAW9C,EAAX8C,OACpCvD,EAA2BF,EAA3BE,UAAWtB,EAAgBoB,EAAhBpB,MAAOqB,EAASD,EAATC,KAG1B,OAFAF,KAAKoE,aAAavD,GAGhB,0BAAMrB,cAAY,uBAAuBN,UAAU,kBACjD,6BAASA,UAAU,oBACjB,2BACEC,KAAK,OACLkF,SAAWrE,KAAK2D,aAChBb,MAAQS,EACRF,KAAK,YACL7D,cAAY,gBAEd,4BACEJ,QAAUY,KAAK4D,aACfzE,KAAK,SACLK,cAAY,gBAHd,UAOA,4BACE6D,KAAK,SACL9E,GAAG,SACHuE,MAAQY,EACRW,SAAWrE,KAAK2D,aAChBzE,UAAU,iBAEV,4BAAQ4D,MAAM,IAAd,mBACA,4BAAQA,MAAM,aAAd,mBACA,4BAAQA,MAAM,cAAd,qBAGF,kBAAC,EAAD,CAAYjE,MAAQA,KAEtB,6BAASK,UAAU,+BAEhBuE,EACG,kBAAC,EAAD,CAAatD,UAAYA,EAAYU,SAAWA,EAAWX,KAAOA,IAElE,uBACEhB,UAAU,qBADZ,4DAOJ,2BAAOA,UAAU,sBACf,kBAAC,EAAD,CAAc6D,SAAW/C,KAAK6D,wB,GAtGf9C,IAAMC,YCmDlBsD,G,MAvDK,SAAC,GAAD,QAClBhG,QACEC,EAFgB,EAEhBA,GACoBI,EAHJ,EAGhBC,mBACAC,EAJgB,EAIhBA,MAEFC,EANkB,EAMlBA,WACAC,EAPkB,EAOlBA,WACAC,EARkB,EAQlBA,cACGC,EATe,4EAWlB,sCAAIV,GAAKA,GAAUU,GACjB,4BACEE,KAAK,SACLC,QAAUJ,GAEV,qCACA,kBAAC,IAAD,CAAeK,KAAK,SAEtB,0BAAMH,UAAU,WAChB,4BACEO,SAAWZ,GAAS,EACpBM,KAAK,SACLC,QAAUL,GAEV,sCACA,kBAAC,IAAD,CAAeM,KAAK,SAGtB,4BACEG,cAAY,6BACZC,SAAWZ,GAASF,EACpBQ,KAAK,SACLC,QAAUN,GAEV,uCACA,kBAAC,IAAD,CAAcO,KAAK,Y,iBCoBVkF,G,wDAxDb,WAAYtE,GAAQ,IAAD,8BACjB,cAAMA,IACDW,MAAQ,CACX4D,OAAQ,GAEV,EAAKC,YAAc,EAAKA,YAAYhC,KAAjB,gBACnB,EAAKiC,WAAa,EAAKA,WAAWjC,KAAhB,gBAND,E,wDAcPkC,GACV3E,KAAKkD,SAAS,CAAEsB,OAAQG,M,iCAGfhC,GACTA,EAAMiC,iBACNC,QAAQC,IAAI,a,+BAGJ,IACAN,EAAWxE,KAAKY,MAAhB4D,OACR,OACE,0BAAMO,SAAW/E,KAAK0E,YACpB,+CACA,yBAAKxF,UAAU,kBACb,2BAAOkE,QAAQ,WACb,yCACA,8BACE4B,YAAY,sBACZ9F,UAAU,eACVC,KAAK,OACLZ,GAAG,UACHiB,cAAY,+BAIhB,yBAAKN,UAAU,YACb,mCACA,kBAAC,IAAD,CACEmE,KAAK,QACL4B,UAAY,EACZnC,MAAQ0B,EACRC,YAAczE,KAAKyE,eAGvB,4BAAQvF,UAAU,UAAUC,KAAK,UAAjC,gB,GAlDmB6B,cC0HdkE,G,iLAnHAhE,GAAW,IACCC,EAAiBD,EAAhCE,cACR,OAAqB,IAAjBD,EACK,uBAAG3B,cAAY,iBAAf,iBAEF,8B,+BAGC,IACAS,EAAUD,KAAVC,MAEMW,EAKOX,EALnBkF,SAAYvE,MACZT,EAImBF,EAJnBE,UACAiF,EAGmBnF,EAHnBmF,eACAC,EAEmBpF,EAFnBoF,mBACAjF,EACmBH,EADnBG,YACAC,EAAmBJ,EAAnBI,eACM/B,EAAYsC,EAAZtC,QACAC,EAAqDD,EAArDC,GAAIC,EAAiDF,EAAjDE,MAAOC,EAA0CH,EAA1CG,UAAWC,EAA+BJ,EAA/BI,MAAOwC,EAAwB5C,EAAxB4C,SAAUoE,EAAchH,EAAdgH,UACzCC,EAAQ/G,EACN8B,EAAcN,KAAKC,MAAnBK,UACFkF,EAAWF,EAEjB,OACE,8BACE,kBAAC,EAAD,CAAYzG,MAAQuG,IACpB,uBAAG5F,cAAY,uBAAf,gBACYhB,IAEZ,yCACUD,IAGV,uBAAGW,UAAU,uBAAb,cACUX,IAEV,uBAAGW,UAAU,iBAAb,qBACcR,IAGd,yBAAKQ,UAAU,iBACb,yBAAKI,IAAMb,EAAYc,IAAI,YAAYL,UAAU,aACjD,yBAAKA,UAAU,WACb,wCACA,oCAEGqG,GAEH,6CAEGC,KAKNxF,KAAKmB,aAAaD,GACnB,yBAAKhC,UAAU,oBACb,uCAEE,kBAAC,IAAD,CAAYG,KAAK,SAEnB,oDAEIiB,EACF,6BAHF,cAKG+E,EAAmB9G,IAEtB,yBAAKW,UAAU,aACb,kBAAC,EAAD,CACEwB,IAAMpC,EAAQC,GACdD,QAAO,2BAAQA,GAAR,IAAiBO,MAAOwG,EAAmB9G,KAClDO,WACE,kBAAMqB,EAAU,2BAAK7B,GAAN,IAAeO,MAAOwG,EAAmB9G,OAE1DQ,WACE,kBAAMqB,EAAY,2BAAK9B,GAAN,IAAeO,MAAOwG,EAAmB9G,OAE5DS,cACE,kBAAMqB,EAAe,2BAAK/B,GAAN,IAAeO,MAAOwG,EAAmB9G,WAMrE,kBAAC,EAAD,W,GAtFqBwC,IAAMC,YCgCpByE,G,6KApCH,IACAnH,EAAY0B,KAAKC,MAAjB3B,QACAE,EAAwBF,EAAxBE,MAAOK,EAAiBP,EAAjBO,MAAOH,EAAUJ,EAAVI,MAChBgH,EAAQhH,EAAQG,EAChBwC,EAAiB3B,KAAKC,aAAa,QAAS,CAChDC,MAAO,WACPC,SAAU,QACTC,OAAOpB,GACJiH,EAAiBjG,KAAKC,aAAa,QAAS,CAChDC,MAAO,WACPC,SAAU,QACTC,OAAO4F,GACV,OACE,wBAAIxG,UAAU,8BACZ,wBAAIA,UAAU,iBAAiBV,GAC/B,gCAEGK,GAEH,4BAAKwC,GACL,4BACGsE,Q,GAtBmB5E,IAAMC,YCwKrB4E,G,wDAtKb,WAAY3F,GAAQ,IAAD,8BACjB,cAAMA,IACDW,MAAQ,CACXyC,KAAM,GACNwC,MAAO,GACPC,IAAK,GACLC,MAAO,GACPC,IAAK,GACLC,QAAS,IAGX,EAAKC,aAAe,EAAKA,aAAazD,KAAlB,gBACpB,EAAK0D,YAAc,EAAKA,YAAY1D,KAAjB,gBAZF,E,yDAeNE,GAAQ,IAAD,EACMA,EAAME,OAAtBQ,EADU,EACVA,KAAMP,EADI,EACJA,MAEd9C,KAAKkD,SAAL,eACGG,EAAOP,M,oCAIG,IAAD,EACsC9C,KAAKY,MAA/CyC,EADI,EACJA,KAAMwC,EADF,EACEA,MAAOC,EADT,EACSA,IAAKC,EADd,EACcA,MAAOC,EADrB,EACqBA,IAAKC,EAD1B,EAC0BA,QAClC5C,EAAK7C,OAAS,GACbqF,EAAMrF,OAAS,GACfsF,EAAItF,OAAS,GACbuF,EAAMvF,OAAS,GACfwF,EAAIxF,OAAS,GACbyF,EAAQzF,OAAS,EACpBR,KAAKkD,SAAS,CACZG,KAAM,GACNwC,MAAO,GACPC,IAAK,GACLC,MAAO,GACPC,IAAK,GACLC,QAAS,KAEJpB,QAAQC,IAAI,yB,+BAGb,IAEAlE,EADUZ,KAAVC,MACgBkF,SAAhBvE,MACAC,EAAkBD,EAAlBC,SAAUC,EAAQF,EAARE,IAHX,EAI2Cd,KAAKY,MAA/CyC,EAJD,EAICA,KAAMwC,EAJP,EAIOA,MAAOC,EAJd,EAIcA,IAAKC,EAJnB,EAImBA,MAAOC,EAJ1B,EAI0BA,IAAKC,EAJ/B,EAI+BA,QAEtC,OACE,8BACE,wBAAI/G,UAAU,eAAd,0BACA,+BACE,4BACE,uCACA,0CACA,wCACA,sCAED2B,EAASJ,KAAI,SAACnC,GAAD,OAAc,kBAAC,EAAD,CAC1BA,QAAUA,EACVoC,IAAMpC,EAAQC,SAGlB,uBAAGW,UAAU,SAAb,eAEG,IACA4B,GAEH,8BACE,wBAAI5B,UAAU,eAAd,iBACA,2BAAOkE,QAAQ,QAAf,QAEG,IACD,2BACEjE,KAAK,OACLkE,KAAK,OACL9E,GAAG,OACHiB,cAAY,oBACZsD,MAAQO,EACRgB,SAAWrE,KAAKkG,gBAIpB,2BAAO9C,QAAQ,SAAf,SAEG,IACD,2BACEjE,KAAK,OACLkE,KAAK,QACL9E,GAAG,QACHiB,cAAY,iBACZsD,MAAQ+C,EACRxB,SAAWrE,KAAKkG,gBAIpB,2BAAO9C,QAAQ,OAAf,OAEG,IACD,2BACEjE,KAAK,OACLkE,KAAK,MACL9E,GAAG,MACHiB,cAAY,eACZsD,MAAQgD,EACRzB,SAAWrE,KAAKkG,gBAIpB,2BAAO9C,QAAQ,SAAf,SAEG,IACD,2BACEjE,KAAK,OACLkE,KAAK,QACL9E,GAAG,QACHiB,cAAY,iBACZsD,MAAQiD,EACR1B,SAAWrE,KAAKkG,gBAIpB,2BAAO9C,QAAQ,OAAf,OAEG,IACD,2BACEjE,KAAK,OACLkE,KAAK,MACL9E,GAAG,MACHiB,cAAY,eACZsD,MAAQkD,EACR3B,SAAWrE,KAAKkG,gBAIpB,2BAAO9C,QAAQ,WAAf,WAEG,IACD,2BACEjE,KAAK,OACLkE,KAAK,UACL9E,GAAG,UACHiB,cAAY,mBACZsD,MAAQmD,EACR5B,SAAWrE,KAAKkG,iBAKtB,4BAAQ9G,QAAUY,KAAKmG,YAAchH,KAAK,UAA1C,iB,GAtJqB4B,IAAMC,YCwLpBoF,E,kDAnLb,WAAYnG,GAAQ,IAAD,8BACjB,cAAMA,IAiBRE,UAAY,SAAC7B,GAAa,IACV+H,EAAa,EAAKzF,MAAxBV,KAEFoG,EAAgBD,EAASE,WAAU,gBAAGhI,EAAH,EAAGA,GAAH,OAAYD,EAAQC,KAAOA,MADnC,IAG7B+H,EACED,EAASC,GAAezH,MAAQwH,EAASC,GAAe1H,qBAC1DyH,EAASC,GAAezH,OAAS,GAGnCwH,EAASG,KAAT,2BACKlI,GADL,IAEEO,MAAO,KAIX,EAAKqE,SAAS,CACZhD,KAAMmG,EACNX,MAAO,EAAKpF,UAAU+F,GACtBxH,MAAO,EAAK4H,aAAaJ,KAE3B,EAAKK,iBAvCY,EA0CnBrG,eAAiB,SAAC/B,GAAa,IAEvBqI,EADqB,EAAK/F,MAAxBV,KACiB0G,QAAO,qBAAGrI,KAAgBD,EAAQC,MAE3D,EAAK2E,SAAS,CACZhD,KAAMyG,EACNjB,MAAO,EAAKpF,UAAUqG,GACtB9H,MAAO,EAAK4H,aAAaE,MAjDV,EAqDnBvG,YAAc,SAAC9B,GAAa,IACZ+H,EAAa,EAAKzF,MAAxBV,KAER,GAAI5B,EAAQO,OAAS,EACnB,OAAO,EAAKwB,eAAe/B,GAG7B,IAAMqI,EAAUN,EAAS5F,KAAI,SAACoG,GAC5B,OAAIA,EAAYtI,KAAOD,EAAQC,GACtB,2BACFsI,GADL,IAEEhI,MAAOgI,EAAYhI,MAAQ,IAIxBgI,KAGT,EAAK3D,SAAS,CACZhD,KAAMyG,EACNjB,MAAO,EAAKpF,UAAUqG,GACtB9H,MAAO,EAAK4H,aAAaJ,MA1EV,EA8EnB/F,UAAY,SAACJ,GACX,IAAM4G,EAAa5G,EAChB6G,QAAO,SAACrB,EAAD,UAA6BA,EAA7B,EAAUhH,MAAV,EAAiBG,QAAqC,GAEhE,OAAOa,KAAKC,aAAa,QAAS,CAChCC,MAAO,WACPC,SAAU,QACTC,OAAOgH,IArFO,EAwFnBE,yBAA2B,WACzB,GAAIC,aAAaC,aAAc,CAAC,IACtBA,EAAiBD,aAAjBC,aACFC,EAAqBC,KAAKC,MAAMH,GAC9BhH,EAAuBiH,EAAvBjH,KAAMwF,EAAiByB,EAAjBzB,MAAO7G,EAAUsI,EAAVtI,MACrB,EAAKqE,SAAS,CACZhD,OACAwF,QACA7G,YAhGa,EAqGnB4H,aAAe,SAACvG,GAAD,OAAUA,EAAK6G,QAAQ,SAACjG,EAAKxC,GAAN,OAAkBA,EAAQO,MAAQiC,IAAM,IArG3D,EAuGnBwG,oBAAsB,SAAC/I,GAAQ,IAEvBD,EADW,EAAKsC,MAAdV,KACaqH,MAAK,gBAAOC,EAAP,EAAGjJ,GAAH,OAAuBA,IAAOiJ,KAExD,OAAKlJ,EAIEA,EAAQO,MAHN,GA5GQ,EAkHnB4I,mBAAqB,WAAO,IAClB7G,EADiB,eACjBA,MACF8G,EAASN,KAAKO,UAAU/G,GAC9BqG,aAAaC,aAAeQ,GAlH5B,EAAK9G,MAAQ,CACXV,KAAM,GACNwF,MAAO,GACP7G,MAAO,GANQ,E,gEAWjBmB,KAAKgH,6B,2CAILhH,KAAKyH,uB,sCA0GL,IAAMG,EAAWC,SAASC,uBAAuB,kBAEjD,IAAKF,EAAS,GAAGG,UAAUC,SAAS,YAAa,CAC/CJ,EAAS,GAAGG,UAAUE,IAAI,YAE1BC,YAAW,WACTN,EAAS,GAAGG,UAAUI,OAAO,cAFH,S,+BAOtB,IAAD,SACwBnI,KAAKY,MAA5BV,EADD,EACCA,KAAMwF,EADP,EACOA,MAAO7G,EADd,EACcA,MAErB,OACE,yBAAKK,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkJ,OAAK,EACLC,KAAK,iCACLC,OAAS,kBAAO,kBAAC,EAAD,CACdnI,UAAY,EAAKA,UACjBtB,MAAQA,EACRqB,KAAOA,OAGX,kBAAC,IAAD,CACEmI,KAAK,QACLC,OAAS,kBAAO,kBAAC,EAAD,CACdhI,UAAYoF,EACZvF,UAAY,EAAKA,UACjBC,YAAc,EAAKA,YACnBC,eAAiB,EAAKA,eACtBH,KAAOA,OAGX,kBAAC,IAAD,CACEmI,KAAK,eACLC,OACE,SAACrI,GAAD,OAAY,kBAAC,EAAD,eACVI,eAAiB,EAAKA,eACtBD,YAAc,EAAKA,YACnBD,UAAY,EAAKA,UACjBD,KAAOA,EACPI,UAAYoF,GACPzF,EANK,CAOVmF,eAAiBvG,EACjBwG,mBAAqB,EAAKiC,0BAIhC,kBAAC,IAAD,CAAOe,KAAK,UAAUE,UAAY3C,U,GA7K1B7E,IAAMC,WCEJwH,QACW,cAA7BC,OAAOtD,SAASuD,UAEkB,UAA7BD,OAAOtD,SAASuD,UAEhBD,OAAOtD,SAASuD,SAASC,MAC1B,2DCZNC,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEFhB,SAASiB,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjF,MAAK,SAACkF,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNxE,QAAQwE,MAAMA,EAAMC,c","file":"static/js/main.143e9157.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaMinusCircle, FaPlusCircle, FaTimesCircle } from 'react-icons/fa';\n\nimport './styles.css';\n\nconst CartItem = ({\n  product: {\n    id,\n    title,\n    thumbnail,\n    price,\n    available_quantity: availableQuantity,\n    quant,\n  },\n  onAddClick,\n  onSubClick,\n  onRemoveClick,\n  ...rest\n}) => (\n  <li id={ id } className=\"cart-item-container\" { ...rest }>\n    <button\n      className=\"btn remove\"\n      type=\"button\"\n      onClick={ onRemoveClick }\n    >\n      <FaTimesCircle size=\"2em\" />\n    </button>\n    <img src={ thumbnail } alt={ title } className=\"item-thumbnail\" />\n    <span className=\"item-name\" data-testid=\"shopping-cart-product-name\">{title}</span>\n    <div className=\"cart-item-control\">\n      <button\n        className=\"btn\"\n        data-testid=\"product-decrease-quantity\"\n        type=\"button\"\n        onClick={ onSubClick }\n      >\n        <FaMinusCircle size=\"2em\" />\n      </button>\n      <span\n        className=\"item-quantity\"\n        data-testid=\"shopping-cart-product-quantity\"\n      >\n        {quant}\n      </span>\n      <button\n        className=\"btn\"\n        data-testid=\"product-increase-quantity\"\n        disabled={ quant >= availableQuantity }\n        type=\"button\"\n        onClick={ onAddClick }\n      >\n        <FaPlusCircle size=\"2em\" />\n      </button>\n    </div>\n    <span className=\"item-price\">\n      { Intl.NumberFormat('pt-Br', {\n        style: 'currency',\n        currency: 'BRL',\n      }).format(price) }\n    </span>\n  </li>\n);\n\nCartItem.propTypes = {\n  product: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    available_quantity: PropTypes.number.isRequired,\n    quant: PropTypes.number.isRequired,\n  }).isRequired,\n  onAddClick: PropTypes.func.isRequired,\n  onSubClick: PropTypes.func.isRequired,\n  onRemoveClick: PropTypes.func.isRequired,\n};\n\nexport default CartItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaShoppingCart, FaReply } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport CartItem from '../../Components/CartItem';\n\nimport './styles.css';\n\nexport default class ShoppingCart extends React.Component {\n  render() {\n    const {\n      cart,\n      addToCart,\n      subFromCart,\n      removeFromCart,\n      cartTotal,\n    } = this.props;\n\n    return (\n      <>\n        <header className=\"cart-header\">\n          <Link to=\"/project-frontend-online-store\">\n            <FaReply size=\"2em\" />\n          </Link>\n          <span>\n            <FaShoppingCart className=\"link-cart-icon\" size=\"2em\" />\n          </span>\n          <h1>Carrinho de Compras</h1>\n        </header>\n        <ul className=\"cart-items-list\">\n          {\n            cart.length\n              ? [\n                ...cart.map((product) => (\n                  <CartItem\n                    key={ product.id }\n                    product={ product }\n                    onAddClick={ () => addToCart(product) }\n                    onSubClick={ () => subFromCart(product) }\n                    onRemoveClick={ () => removeFromCart(product) }\n                  />\n                )),\n                <h3 key=\"totalPrice\">\n                  { `Valor Total da Compra: ${cartTotal}` }\n                </h3>,\n                <Link\n                  key=\"checkout\"\n                  data-testid=\"checkout-products\"\n                  to={\n                    { pathname: '/finish',\n                      state: {\n                        products: cart,\n                        sum: cartTotal,\n                      } }\n                  }\n                >\n                  Finish  your purchase\n                </Link>,\n              ]\n              : <h2 data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</h2>\n          }\n        </ul>\n      </>\n    );\n  }\n}\n\nShoppingCart.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.object).isRequired,\n  cartTotal: PropTypes.string.isRequired,\n  addToCart: PropTypes.func.isRequired,\n  subFromCart: PropTypes.func.isRequired,\n  removeFromCart: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport './styles.css';\nimport { FaCartPlus } from 'react-icons/fa';\n\nclass ProductCard extends React.Component {\n  freeShipping(shipping) {\n    const { free_shipping: freeShipping } = shipping;\n\n    if (freeShipping === true) {\n      return <p data-testid=\"free-shipping\">Frete Gratis </p>;\n    }\n    return <p />;\n  }\n\n  render() {\n    const { product, addToCart, cart } = this.props;\n    const { id, title, price, thumbnail, shipping } = product;\n    const formattedPrice = Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    }).format(price);\n    const cartNames = cart.map((cartProduct) => cartProduct.title);\n    return (\n      <section\n        data-testid=\"product\"\n        className={ `product ${cartNames.includes(product.title) ? 'on-cart' : ''}` }\n      >\n        <h1>{title}</h1>\n        <img src={ thumbnail } alt=\"Product Thumbnail\" />\n        <p>{formattedPrice}</p>\n        {this.freeShipping(shipping)}\n\n        <div className=\"info-cart-container\">\n\n          <Link\n            to={\n              { pathname: `/product/${id}`,\n                state: { product } }\n            }\n            data-testid=\"product-detail-link\"\n          >\n            More Info\n          </Link>\n          <button\n            className=\"addcart-button\"\n            data-testid=\"product-add-to-cart\"\n            type=\"button\"\n            onClick={ () => addToCart(product) }\n          >\n            Add to cart\n            <FaCartPlus size=\"2em\" className=\"cart-icon\" />\n          </button>\n\n        </div>\n\n      </section>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  product: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n    shipping: PropTypes.shape({\n      free_shipping: PropTypes.bool.isRequired,\n    }).isRequired,\n    thumbnail: PropTypes.string.isRequired }).isRequired,\n  cart: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n};\n\nexport default ProductCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCard from '../ProductCard';\n\nimport './styles.css';\n\nclass ProductList extends React.Component {\n  render() {\n    const { products, addToCart, cart } = this.props;\n    return (\n      products.length === 0\n        ? <p>Nenhum produto encontrado</p>\n        : (\n          <section className=\"products-list\">\n            {products.map((product) => (<ProductCard\n              addToCart={ addToCart }\n              product={ product }\n              key={ product.id }\n              cart={ cart }\n            />))}\n          </section>\n        )\n    );\n  }\n}\n\nProductList.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addToCart: PropTypes.func.isRequired,\n  cart: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default ProductList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nimport { FaShoppingCart } from 'react-icons/fa';\n\nclass CartButton extends React.Component {\n  render() {\n    const { quant } = this.props;\n    return (\n      <Link to=\"/cart\" data-testid=\"shopping-cart-button\">\n        <FaShoppingCart size=\"2em\" className=\"link-cart-icon\" />\n        <div data-testid=\"shopping-cart-size\">{quant}</div>\n      </Link>\n    );\n  }\n}\n\nCartButton.propTypes = {\n  quant: PropTypes.number.isRequired };\n\nexport default CartButton;\n","export async function getCategories() {\n  const response = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n\n  const Categorias = await response.json();\n\n  return Categorias;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  // Implemente aqui! Quando o fizer, descomente os parâmetros que essa função recebe\n  let searchQuery = 'search?';\n\n  if (categoryId) {\n    searchQuery += `category=${categoryId || ''}`;\n  }\n\n  if (query) {\n    searchQuery += `${categoryId ? '&' : ''}q=${query || ''}`;\n  }\n\n  const response = await fetch(\n    `https://api.mercadolibre.com/sites/MLB/${searchQuery}`,\n  );\n  const itens = await response.json();\n\n  return itens;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../../services/api';\n\nimport './styles.css';\n\nclass CategoryList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categorias: [],\n    };\n\n    this.listaCategorias = this.listaCategorias.bind(this);\n    this.onCallback = this.onCallback.bind(this);\n  }\n\n  componentDidMount() {\n    this.listaCategorias();\n  }\n\n  onCallback(event) {\n    const elemento = event.target.value;\n    const { callback } = this.props;\n    callback(elemento);\n  }\n\n  async listaCategorias() {\n    const CategoryNames = await api.getCategories();\n    this.setState({\n      categorias: CategoryNames,\n    });\n  }\n\n  render() {\n    const { categorias } = this.state;\n    return (\n      <div>\n        <ul className=\"category-list-container\">\n          { categorias\n            .map((obj) => (\n\n              <li key={ obj.id } className=\"category-list-item\">\n\n                <label htmlFor={ obj.name }>{obj.name}</label>\n                <input\n                  data-testid=\"category\"\n                  onClick={ this.onCallback }\n                  name=\"categoria\"\n                  type=\"radio\"\n                  id={ obj.name }\n                  value={ obj.id }\n                />\n\n              </li>))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nCategoryList.propTypes = {\n  callback: PropTypes.func.isRequired,\n};\n\nexport default CategoryList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductList from '../../Components/ProductList';\nimport CartButton from '../../Components/CartButton';\nimport * as api from '../../services/api';\nimport CategoryList from '../../Components/CategoryList';\n\nimport './styles.css';\n\nclass ProductsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searching: '',\n      category: '',\n      products: [],\n      doneSearching: false,\n      sorted: '',\n    };\n    this.handleQuerry = this.handleQuerry.bind(this);\n    this.handleButton = this.handleButton.bind(this);\n    this.categorySearch = this.categorySearch.bind(this);\n  }\n\n  handleQuerry(event) {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  async handleButton() {\n    const { searching, category } = this.state;\n    const updated = await api.getProductsFromCategoryAndQuery(category, searching);\n    this.setState({\n      products: updated.results,\n      doneSearching: true,\n    });\n  }\n\n  categorySearch(category) {\n    this.setState({ category });\n    const { searching } = this.state;\n    api.getProductsFromCategoryAndQuery(category, searching).then((response) => {\n      this.setState({\n        doneSearching: true,\n        products: response.results,\n      });\n    });\n  }\n\n  sortProducts(array) {\n    const { sorted } = this.state;\n    if (sorted === 'ascending') {\n      array.sort((a, b) => a.price - b.price);\n    } else if (sorted === 'descending') {\n      array.sort((a, b) => b.price - a.price);\n    }\n  }\n\n  render() {\n    const { state, props } = this;\n    const { searching, products, doneSearching, sorted } = state;\n    const { addToCart, quant, cart } = props;\n    this.sortProducts(products);\n\n    return (\n      <main data-testid=\"home-initial-message\" className=\"main-container\">\n        <section className=\"search-container\">\n          <input\n            type=\"text\"\n            onChange={ this.handleQuerry }\n            value={ searching }\n            name=\"searching\"\n            data-testid=\"query-input\"\n          />\n          <button\n            onClick={ this.handleButton }\n            type=\"button\"\n            data-testid=\"query-button\"\n          >\n            Search\n          </button>\n          <select\n            name=\"sorted\"\n            id=\"sorted\"\n            value={ sorted }\n            onChange={ this.handleQuerry }\n            className=\"sorted-select\"\n          >\n            <option value=\"\">Select by price</option>\n            <option value=\"ascending\">Ascending price</option>\n            <option value=\"descending\">Descending price</option>\n\n          </select>\n          <CartButton quant={ quant } />\n        </section>\n        <section className=\"products-category-container\">\n\n          {doneSearching\n            ? <ProductList addToCart={ addToCart } products={ products } cart={ cart } />\n            : (\n              <p\n                className=\"empty-search-text\"\n              >\n                Digite algum termo de pesquisa ou escolha uma categoria.\n              </p>\n            )}\n\n          <aside className=\"category-container\">\n            <CategoryList callback={ this.categorySearch } />\n          </aside>\n\n        </section>\n\n      </main>\n    );\n  }\n}\n\nProductsList.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  quant: PropTypes.number.isRequired,\n  cart: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default ProductsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaMinusCircle, FaPlusCircle, FaTimesCircle } from 'react-icons/fa';\nimport './style.css';\n\nconst DetailsItem = ({\n  product: {\n    id,\n    available_quantity: availableQuantity,\n    quant,\n  },\n  onAddClick,\n  onSubClick,\n  onRemoveClick,\n  ...rest\n}) => (\n  <li id={ id } { ...rest }>\n    <button\n      type=\"button\"\n      onClick={ onRemoveClick }\n    >\n      <p>Apagar</p>\n      <FaTimesCircle size=\"2em\" />\n    </button>\n    <span className=\"cart-i\" />\n    <button\n      disabled={ quant <= 0 }\n      type=\"button\"\n      onClick={ onSubClick }\n    >\n      <p>Retirar</p>\n      <FaMinusCircle size=\"2em\" />\n    </button>\n\n    <button\n      data-testid=\"product-detail-add-to-cart\"\n      disabled={ quant >= availableQuantity }\n      type=\"button\"\n      onClick={ onAddClick }\n    >\n      <p>Adcionar</p>\n      <FaPlusCircle size=\"2em\" />\n    </button>\n\n  </li>\n);\n\nDetailsItem.propTypes = {\n  product: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    available_quantity: PropTypes.number.isRequired,\n    quant: PropTypes.number.isRequired,\n  }).isRequired,\n  onAddClick: PropTypes.func.isRequired,\n  onSubClick: PropTypes.func.isRequired,\n  onRemoveClick: PropTypes.func.isRequired,\n};\n\nexport default DetailsItem;\n","import React, { Component } from 'react';\nimport StarRatingComponent from 'react-star-rating-component';\nimport './style.css';\n\nclass EvaluationForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rating: 0,\n    };\n    this.onStarClick = this.onStarClick.bind(this);\n    this.formAceppt = this.formAceppt.bind(this);\n  }\n  /*\n  Biblioteca utilazada para fazer a avaliação\n  fonte: https://www.npmjs.com/package/react-star-rating-component\n\n  */\n\n  onStarClick(nextValue) {\n    this.setState({ rating: nextValue });\n  }\n\n  formAceppt(event) {\n    event.preventDefault();\n    console.log('cliclou');\n  }\n\n  render() {\n    const { rating } = this.state;\n    return (\n      <form onSubmit={ this.formAceppt }>\n        <h3>Avaliação</h3>\n        <div className=\"form-container\">\n          <label htmlFor=\"comment\">\n            <p>Comentario</p>\n            <textarea\n              placeholder=\"Mensagem (opcional)\"\n              className=\"text-coments\"\n              type=\"text\"\n              id=\"comment\"\n              data-testid=\"product-detail-evaluation\"\n            />\n\n          </label>\n          <div className=\"starCamp\">\n            <p>Nota</p>\n            <StarRatingComponent\n              name=\"rate1\"\n              starCount={ 5 }\n              value={ rating }\n              onStarClick={ this.onStarClick }\n            />\n          </div>\n          <button className=\"bnt-sub\" type=\"submit\">Enviar</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default EvaluationForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaCartPlus } from 'react-icons/fa';\n\nimport DetailsItem from '../Components/DetailsItem';\nimport CartButton from '../Components/CartButton';\nimport EvaluationForm from '../Components/EvaluationForm';\n\nimport './ProductDetailsStyle.css';\n\nclass ProductDetails extends React.Component {\n  freeShipping(shipping) {\n    const { free_shipping: freeShipping } = shipping;\n    if (freeShipping === true) {\n      return <p data-testid=\"free-shipping\">Frete Gratis </p>;\n    }\n    return <p />;\n  }\n\n  render() {\n    const { props } = this;\n    const {\n      location: { state },\n      addToCart,\n      cartTotalItems,\n      getProductQuantity,\n      subFromCart,\n      removeFromCart } = props;\n    const { product } = state;\n    const { id, title, thumbnail, price, shipping, condition } = product;\n    const marca = title;\n    const { cartTotal } = this.props;\n    const condicao = condition;\n\n    return (\n      <main>\n        <CartButton quant={ cartTotalItems } />\n        <p data-testid=\"product-detail-name\">\n          {`Name: ${title}`}\n        </p>\n        <p>\n          {`ID: ${id}`}\n        </p>\n\n        <p className=\"title-product hiden\">\n          {`ID: ${id}`}\n        </p>\n        <p className=\"title-product\">\n          {`Preço: $${price}`}\n        </p>\n\n        <div className=\"container-img\">\n          <img src={ thumbnail } alt=\"Thumbnail\" className=\"img-cart\" />\n          <div className=\"details\">\n            <h2>Detalhes</h2>\n            <p>\n              Marca:\n              {marca}\n            </p>\n            <p>\n              Condição:\n              {condicao}\n            </p>\n          </div>\n        </div>\n\n        {this.freeShipping(shipping)}\n        <div className=\"section-carrinho\">\n          <h2>\n            Carrinho\n            <FaCartPlus size=\"2em\" />\n          </h2>\n          <h3>\n            Preço do carrinho:\n            { cartTotal }\n            <br />\n            Quantidade:\n            {getProductQuantity(id)}\n          </h3>\n          <div className=\"bnts-cart\">\n            <DetailsItem\n              key={ product.id }\n              product={ { ...product, quant: getProductQuantity(id) } }\n              onAddClick={\n                () => addToCart({ ...product, quant: getProductQuantity(id) })\n              }\n              onSubClick={\n                () => subFromCart({ ...product, quant: getProductQuantity(id) })\n              }\n              onRemoveClick={\n                () => removeFromCart({ ...product, quant: getProductQuantity(id) })\n              }\n            />\n          </div>\n        </div>\n\n        <EvaluationForm />\n\n      </main>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      product: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        condition: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        thumbnail: PropTypes.string.isRequired,\n        shipping: PropTypes.shape({\n          free_shipping: PropTypes.bool.isRequired,\n        }).isRequired,\n      }),\n    }),\n  }).isRequired,\n  addToCart: PropTypes.func.isRequired,\n  cartTotalItems: PropTypes.number.isRequired,\n  getProductQuantity: PropTypes.func.isRequired,\n  subFromCart: PropTypes.func.isRequired,\n  removeFromCart: PropTypes.func.isRequired,\n  cartTotal: PropTypes.string.isRequired,\n};\n\nexport default ProductDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nclass ProductCheckout extends React.Component {\n  render() {\n    const { product } = this.props;\n    const { title, quant, price } = product;\n    const total = price * quant;\n    const formattedPrice = Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    }).format(price);\n    const formattedTotal = Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    }).format(total);\n    return (\n      <tr className=\"product-checkout-container\">\n        <td className=\"product-title\">{title}</td>\n        <td>\n          x\n          {quant}\n        </td>\n        <td>{formattedPrice}</td>\n        <td>\n          {formattedTotal}\n        </td>\n      </tr>\n    );\n  }\n}\n\nProductCheckout.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    quant: PropTypes.number.isRequired }).isRequired,\n\n};\n\nexport default ProductCheckout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCheckout from '../../Components/ProductCheckout';\n\nimport './styles.css';\n\nclass FinishPurchase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      cpf: '',\n      phone: '',\n      cep: '',\n      address: '',\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.clickFinish = this.clickFinish.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  clickFinish() {\n    const { name, email, cpf, phone, cep, address } = this.state;\n    if (name.length > 0\n      && email.length > 0\n      && cpf.length > 0\n      && phone.length > 0\n      && cep.length > 0\n      && address.length > 0) {\n      this.setState({\n        name: '',\n        email: '',\n        cpf: '',\n        phone: '',\n        cep: '',\n        address: '',\n      });\n    } else { console.log('Há campos vazios'); }\n  }\n\n  render() {\n    const { props } = this;\n    const { state } = props.location;\n    const { products, sum } = state;\n    const { name, email, cpf, phone, cep, address } = this.state;\n\n    return (\n      <main>\n        <h2 className=\"verify-data\"> Verify your purchase </h2>\n        <table>\n          <tr>\n            <th>Produto</th>\n            <th>Quantidade</th>\n            <th>Preço</th>\n            <th>Total</th>\n          </tr>\n          {products.map((product) => (<ProductCheckout\n            product={ product }\n            key={ product.id }\n          />))}\n        </table>\n        <p className=\"total\">\n          Total price:\n          {' '}\n          {sum}\n        </p>\n        <form>\n          <h2 className=\"verify-data\"> Buyer info: </h2>\n          <label htmlFor=\"name\">\n            Name:\n            {' '}\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              data-testid=\"checkout-fullname\"\n              value={ name }\n              onChange={ this.handleChange }\n            />\n          </label>\n\n          <label htmlFor=\"email\">\n            Email:\n            {' '}\n            <input\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              data-testid=\"checkout-email\"\n              value={ email }\n              onChange={ this.handleChange }\n            />\n          </label>\n\n          <label htmlFor=\"cpf\">\n            CPF:\n            {' '}\n            <input\n              type=\"text\"\n              name=\"cpf\"\n              id=\"cpf\"\n              data-testid=\"checkout-cpf\"\n              value={ cpf }\n              onChange={ this.handleChange }\n            />\n          </label>\n\n          <label htmlFor=\"phone\">\n            Phone:\n            {' '}\n            <input\n              type=\"text\"\n              name=\"phone\"\n              id=\"phone\"\n              data-testid=\"checkout-phone\"\n              value={ phone }\n              onChange={ this.handleChange }\n            />\n          </label>\n\n          <label htmlFor=\"cep\">\n            CEP:\n            {' '}\n            <input\n              type=\"text\"\n              name=\"cep\"\n              id=\"cep\"\n              data-testid=\"checkout-cep\"\n              value={ cep }\n              onChange={ this.handleChange }\n            />\n          </label>\n\n          <label htmlFor=\"address\">\n            Address:\n            {' '}\n            <input\n              type=\"text\"\n              name=\"address\"\n              id=\"address\"\n              data-testid=\"checkout-address\"\n              value={ address }\n              onChange={ this.handleChange }\n            />\n          </label>\n        </form>\n\n        <button onClick={ this.clickFinish } type=\"button\"> Finish </button>\n      </main>\n    );\n  }\n}\n\nFinishPurchase.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      sum: PropTypes.string.isRequired,\n      products: PropTypes.arrayOf(PropTypes.object),\n\n    }).isRequired,\n  }).isRequired,\n\n};\n\nexport default FinishPurchase;\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport ShoppingCart from './pages/ShoppingCart';\nimport ProductsList from './pages/ProductsList';\nimport ProductDetails from './pages/ProductDetails';\nimport FinishPurchase from './pages/FinishPurchase';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cart: [],\n      total: '',\n      quant: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.getStateFromLocalStorage();\n  }\n\n  componentDidUpdate() {\n    this.updateLocalStorage();\n  }\n\n  addToCart = (product) => {\n    const { cart: prevCart } = this.state;\n    const findIndexNotFoundNumber = -1;\n    const existsProduct = prevCart.findIndex(({ id }) => product.id === id);\n\n    if (existsProduct !== findIndexNotFoundNumber) {\n      if (prevCart[existsProduct].quant < prevCart[existsProduct].available_quantity) {\n        prevCart[existsProduct].quant += 1;\n      }\n    } else {\n      prevCart.push({\n        ...product,\n        quant: 1,\n      });\n    }\n\n    this.setState({\n      cart: prevCart,\n      total: this.cartTotal(prevCart),\n      quant: this.cartQuantity(prevCart),\n    });\n    this.animateButton();\n  }\n\n  removeFromCart = (product) => {\n    const { cart: prevCart } = this.state;\n    const newCart = prevCart.filter(({ id }) => id !== product.id);\n\n    this.setState({\n      cart: newCart,\n      total: this.cartTotal(newCart),\n      quant: this.cartQuantity(newCart),\n    });\n  }\n\n  subFromCart = (product) => {\n    const { cart: prevCart } = this.state;\n\n    if (product.quant <= 1) {\n      return this.removeFromCart(product);\n    }\n\n    const newCart = prevCart.map((prevProduct) => {\n      if (prevProduct.id === product.id) {\n        return {\n          ...prevProduct,\n          quant: prevProduct.quant - 1,\n        };\n      }\n\n      return prevProduct;\n    });\n\n    this.setState({\n      cart: newCart,\n      total: this.cartTotal(newCart),\n      quant: this.cartQuantity(prevCart),\n    });\n  }\n\n  cartTotal = (cart) => {\n    const totalPrice = cart\n      .reduce((total, { price, quant }) => total + (price * quant), 0);\n\n    return Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n    }).format(totalPrice);\n  }\n\n  getStateFromLocalStorage = () => {\n    if (localStorage.shoppingCart) {\n      const { shoppingCart } = localStorage;\n      const shoppingCartObject = JSON.parse(shoppingCart);\n      const { cart, total, quant } = shoppingCartObject;\n      this.setState({\n        cart,\n        total,\n        quant,\n      });\n    }\n  }\n\n  cartQuantity = (cart) => cart.reduce(((sum, product) => product.quant + sum), 0)\n\n  productQuantityById = (id) => {\n    const { cart } = this.state;\n    const product = cart.find(({ id: productId }) => id === productId);\n\n    if (!product) {\n      return 0;\n    }\n\n    return product.quant;\n  }\n\n  updateLocalStorage = () => {\n    const { state } = this;\n    const object = JSON.stringify(state);\n    localStorage.shoppingCart = object;\n  }\n\n  animateButton() {\n    const cartIcon = document.getElementsByClassName('link-cart-icon');\n\n    if (!cartIcon[0].classList.contains('animated')) {\n      cartIcon[0].classList.add('animated');\n      const ONEANDAHALF_SECONDS = 1500;\n      setTimeout(() => {\n        cartIcon[0].classList.remove('animated');\n      }, ONEANDAHALF_SECONDS);\n    }\n  }\n\n  render() {\n    const { cart, total, quant } = this.state;\n\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Route\n            exact\n            path=\"/project-frontend-online-store\"\n            render={ () => (<ProductsList\n              addToCart={ this.addToCart }\n              quant={ quant }\n              cart={ cart }\n            />) }\n          />\n          <Route\n            path=\"/cart\"\n            render={ () => (<ShoppingCart\n              cartTotal={ total }\n              addToCart={ this.addToCart }\n              subFromCart={ this.subFromCart }\n              removeFromCart={ this.removeFromCart }\n              cart={ cart }\n            />) }\n          />\n          <Route\n            path=\"/product/:id\"\n            render={\n              (props) => (<ProductDetails\n                removeFromCart={ this.removeFromCart }\n                subFromCart={ this.subFromCart }\n                addToCart={ this.addToCart }\n                cart={ cart }\n                cartTotal={ total }\n                { ...props }\n                cartTotalItems={ quant }\n                getProductQuantity={ this.productQuantityById }\n              />)\n            }\n          />\n          <Route path=\"/finish\" component={ FinishPurchase } />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}